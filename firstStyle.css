:root {
  --clr-light-red-work: hsl(15, 100%, 70%);
  --clr-soft-blue-play: hsl(195, 74%, 62%);
  --clr-light-red-study: hsl(348, 100%, 68%);
  --clr-lime-green-exercise: hsl(145, 58%, 55%);
  --clr-violet-social: hsl(264, 64%, 52%);
  --clr-soft-orange-selfcare: hsl(43, 84%, 65%);

  --clr-very-dark-blue: hsl(226, 43%, 10%);
  --clr-dark-blue: hsl(235, 46%, 20%);
  --clr-desaturated-blue: hsl(235, 45%, 61%);
  --clr-hover-blue: hsl(235, 41%, 44%);
  --clr-pale-blue: hsl(236, 100%, 87%);

  --fw-300: 300;
  --fw-400: 400;
  --fw-500: 500;

  --br: 15px;

  --transition: 200ms ease-in-out;
}
*,
*::before,
*::after {
  padding: 0px;
  margin: 0px;
  box-sizing: border-box;
}

body {
  font-size: 18px;
  font-family: "Rubik", sans-serif;
  background-color: var(--clr-very-dark-blue);
}
img {
  max-width: 100%;
}
h1 {
  font-weight: var(--fw-300);
  color: #ffffff;
  font-size: 1.5rem;
}
h2 {
  font-size: 2rem;
  font-weight: var(--fw-300);
}
.container {
  max-width: 90%;
  margin: 4rem auto;
  display: grid;
  gap: clamp(1.5rem, 3vw, 2rem);
  /*this means it will never get smaller than 1.5rem 
  and it will try to get to 3 viewport widths but it 
  will never get larger than 2rem */
}
.hero {
  background-color: var(--clr-dark-blue);
  /*by doing this the .hero-bottom will automatically be this color
  and I won't have to give the .hero-bottom ad background-color*/
  border-radius: var(--br);
}
.hero-top {
  background-color: var(--clr-desaturated-blue);
  border-radius: var(--br);
  color: var(--clr-pale-blue);
  padding: 2rem 1.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}
.avatar {
  border: 3px solid #ffffff;
  border-radius: 50%;
  max-width: 70px;
}
.avatar-content p {
  font-size: 0.9rem;
}
.hero-bottom {
  color: var(--clr-pale-blue);
  display: flex;
  justify-content: space-between;
  padding: 1.5rem;
}
.hero-bottom p:where(.active, :hover) {
  /*I just learn this so instead of having to do them separately
  I can just say :where the p is .active or :hover ...*/
  color: #ffffff;
  cursor: pointer;
  transition: color var(--transition);
}
.card {
  background-repeat: no-repeat;
  background-position: top -9px right 15px;
  border-radius: var(--br);
  padding-block: 2.5rem 0;
}
.card-work {
  background-color: var(--clr-light-red-work);
  background-image: url(images/icon-work.svg);
}
.card-play {
  background-color: var(--clr-soft-blue-play);
  background-image: url(images/icon-play.svg);
}
.card-study {
  background-color: var(--clr-light-red-study);
  background-image: url(images/icon-study.svg);
}
.card-exercise {
  background-color: var(--clr-lime-green-exercise);
  background-image: url(images/icon-exercise.svg);
}
.card-social {
  background-color: var(--clr-violet-social);
  background-image: url(images/icon-social.svg);
}
.card-self-care {
  background-color: var(--clr-soft-orange-selfcare);
  background-image: url(images/icon-self-care.svg);
}
.card-wrap {
  background-color: var(--clr-dark-blue);
  border-radius: var(--br);
  padding: 1.5rem;
}
.title-line,
.hours-line {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #ffffff;
  margin-top: 0.5rem;
}
#previous {
  color: var(--clr-pale-blue);
}

.card .card-wrap:hover {
  cursor: pointer;
  background-color: var(--clr-hover-blue);
}
.ellipsis:hover {
  color: #ffffff;
}

@media (min-width: 568px) {
  .container {
    max-width: 1400px;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-template-areas:
      "hero work play study"
      "hero exercise social self-care";
    content: fit; /*Must have this so that at the
    background-color on the top/behind does NOT show
    thru on the bottom*/
    gap: 1.5rem;
  }
  .hero {
    grid-area: hero;
  }
  .card-wrap {
    content: fit;
    padding-block: 2rem;
    /*Must have these so that at the
    background-color on the top/behind does NOT show
    thru on the bottom*/
  }

  .card-work {
    grid-area: work;
  }
  .card-play {
    grid-area: play;
  }
  .card-study {
    grid-area: study;
  }
  .card-exercise {
    grid-area: exercise;
  }
  .card-social {
    grid-area: social;
  }
  .card-self-care {
    grid-area: self-care;
  }
  .hero-top,
  .hero-bottom {
    display: block; /*first I tried to do it with the display flex which 
    is on the mobile design - but with flex-direction: column and 
    justify-content: left it still stayed centered*/
    gap: 1rem;
  }

  .hero-bottom p:not(:last-child) {
    margin-bottom: 1.5rem;
  }
  h1 {
    font-size: 3rem;
  }
  h2 {
    font-size: 3rem;
  }
  .hours-line {
    display: block;
  }
  #previous {
    margin-top: 0.5rem;
    font-size: 0.8rem;
  }
  .avatar {
    margin-bottom: 2rem;
  }
}
