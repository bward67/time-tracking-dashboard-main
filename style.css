:root {
  --clr-light-red-work: hsl(15, 100%, 70%);
  --clr-soft-blue-play: hsl(195, 74%, 62%);
  --clr-light-red-study: hsl(348, 100%, 68%);
  --clr-lime-green-exercise: hsl(145, 58%, 55%);
  --clr-violet-social: hsl(264, 64%, 52%);
  --clr-soft-orange-selfcare: hsl(43, 84%, 65%);

  --clr-linear-gradient-work: linear-gradient(
    hsl(15, 100%, 70%) 0%,
    hsl(15, 100%, 70%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );

  --clr-linear-gradient-play: linear-gradient(
    hsl(195, 74%, 62%) 0%,
    hsl(195, 74%, 62%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );

  --clr-linear-gradient-study: linear-gradient(
    hsl(348, 100%, 68%) 0%,
    hsl(348, 100%, 68%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );

  --clr-linear-gradient-exercise: linear-gradient(
    hsl(145, 58%, 55%) 0%,
    hsl(145, 58%, 55%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );
  --clr-linear-gradient-social: linear-gradient(
    hsl(264, 64%, 52%) 0%,
    hsl(264, 64%, 52%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );
  --clr-linear-gradient-selfcare: linear-gradient(
    hsl(43, 84%, 65%) 0%,
    hsl(43, 84%, 65%) 75%,
    hsl(235, 46%, 20%) 75%,
    hsl(235, 46%, 20%) 100%
  );

  --clr-very-dark-blue: hsl(226, 43%, 10%);
  --clr-dark-blue: hsl(235, 46%, 20%);
  --clr-desaturated-blue: hsl(235, 45%, 61%);
  --clr-hover-blue: hsl(235, 41%, 44%);
  --clr-pale-blue: hsl(236, 100%, 87%);

  --fw-300: 300;
  --fw-400: 400;
  --fw-500: 500;

  --br: 15px;
  --br-colored: 15px 15px 13px 13px;

  --transition: 200ms ease-in-out;
}
*,
*::before,
*::after {
  padding: 0px;
  margin: 0px;
  box-sizing: border-box;
}

body {
  font-size: 1.125rem;
  font-family: "Rubik", sans-serif;
  background-color: var(--clr-very-dark-blue);
}

img {
  max-width: 100%;
}
h1 {
  visibility: hidden;
}
.title {
  font-size: 1rem;
  font-weight: var(--fw-500);
}
h3 {
  font-size: 2rem;
  font-weight: var(--fw-300);
}
.container {
  max-width: 90%;
  margin: 8.1rem 2.4rem;
  display: grid;
  grid-auto-rows: max-content;
  /*this means it will be created by the browser not us
  so then each row will take as much height as it requires*/
  grid-template-columns: 1fr;
  justify-content: center;
  gap: 2rem;
}
.hero {
  background-color: var(--clr-dark-blue);
  /*by doing this the .hero-bottom will automatically be this color
  and I won't have to give the .hero-bottom a background-color*/
  border-radius: var(--br);
}
.hero-top {
  background-color: var(--clr-desaturated-blue);
  border-radius: var(--br);
  color: var(--clr-pale-blue);
  padding: 2rem 1.5rem;
  display: flex;
  flex-wrap: wrap; /*so that if the screen is very small the text will wrap under the img*/
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.avatar {
  border: 3px solid #ffffff;
  border-radius: 50%;
  max-width: 70px;
}

.avatar-content p {
  font-size: 0.9rem;
}
.avatar-content p:last-child {
  font-weight: var(--fw-300);
  color: #ffffff;
  font-size: 1.5rem;
}
.hero-bottom {
  color: var(--clr-pale-blue);
  display: flex;
  justify-content: space-between;
  padding: 1.5rem;
}
.btns {
  font-family: inherit;
  border: none;
  background-color: transparent;
  color: var(--clr-desaturated-blue);
  padding: 1rem;
  transition: color 250ms;
}
.hero-bottom button:where(.active, :hover) {
  /*I just learnt this so instead of having to do them separately 
  I can just say :where the p is .active or :hover ... 
  you can also use the word is instead of where*/
  color: #ffffff;
  cursor: pointer;
  /*I added these bottom 3 just because I can :)
  AND it looks better in my opinion */
  text-transform: uppercase;
  letter-spacing: 3px;
  scale: 1.2;
}
.card {
  border-radius: var(--br);
  /*padding-block: 2.3rem 0;*/
  display: grid;
  grid-template-rows: auto-fit(3.8rem 1fr);
  /*this allows for the top colored part over the 
  dark blue box to take up 3.8rem in width and the blue box
  to take up 1fr*/
  grid-template-columns: 1fr;
  position: relative;
  overflow: hidden; /*so that the img doesn't hangover the
  colored div*/
}
.card-bg {
  grid-row: 1/3;
  grid-column: 1/2;
  display: grid;
  place-items: start end;
  height: 3.2rem;
}
.card-bg img {
  position: absolute;
  top: -0.7rem;
  right: 1rem;
}

.card-wrap {
  background-color: var(--clr-dark-blue);
  padding: 0.5rem 1.5rem 1rem 1.5rem !important;
  position: relative;
  z-index: 10;
  display: grid;
  align-self: flex-end;
}

.card-work {
  background-image: var(--clr-linear-gradient-work);
}
.card-play {
  background-image: var(--clr-linear-gradient-play);
}
.card-study {
  background-image: var(--clr-linear-gradient-study);
}
.card-exercise {
  background-image: var(--clr-linear-gradient-exercise);
}
.card-social {
  background-image: var(--clr-linear-gradient-social);
}
.card-self-care {
  background-image: var(--clr-linear-gradient-selfcare);
}

.title-line,
.hours-line {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #ffffff;
  margin-top: 0.5rem;
}
.hours-line p {
  color: var(--clr-pale-blue);
}

.card .card-wrap:hover {
  cursor: pointer;
  background-color: var(--clr-hover-blue);
}

.title-line .svg {
  transition: #ffffff 250ms;
}
.title-line .svg:hover > svg path {
  fill: #ffffff;
}

@media (min-width: 568px) {
  .container {
    max-width: 1300px;
    grid-template-columns: repeat(auto-fit, minmax(17rem, 1fr));
    /*this means our grid will create columns as it needs and as it can fit them and each col will be
    a minimum of 17rem and it will expand until a new
    item of 17rem has the room to be added*/
    grid-template-rows: 1fr 1fr;
  }
  h2 {
    font-size: 4rem;
  }
  .hero {
    grid-row: 1/3; /*to make it stretch to 2 rows*/
  }
  .hero-top,
  .hero-bottom {
    flex-direction: column;
    align-items: start; /*so that they align left*/
  }
  .hero-bottom {
    padding: 1rem 0 1rem 1rem;
  }
  .hero-bottom .btns:last-child {
    margin-bottom: 0.5rem;
  }
  .hero-top img {
    margin-bottom: 1rem;
  }
  .avatar {
    margin-bottom: 2rem;
  }
  .avatar-content p {
    font-size: 1.1rem;
  }
  .avatar-content p:last-child {
    font-size: 3rem;
    line-height: 1.1;
  }
  .btns {
    font-size: 1.2rem;
  }
  .card {
    grid-template-rows: auto-fit(4.5rem 1fr);
  }
  .card-bg {
    height: 25%;
  }
  .card-wrap {
    content: fit;
    padding-block: 2.4rem;
    /*Must have these so that at the
    background-color on the top/behind does NOT show
    thru on the bottom*/
    height: 75%;
  }

  .hours-line {
    display: block;
  }
  .hours-line p {
    margin-top: 0.5rem;
    font-size: 1.1rem;
  }
}
